{"remainingRequest":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitHub\\StudentLearning\\01-login\\src\\Sciences\\ComputerScience.vue?vue&type=template&id=68b325a2&","dependencies":[{"path":"C:\\GitHub\\StudentLearning\\01-login\\src\\Sciences\\ComputerScience.vue","mtime":1620233689885},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibmV4dC1zdGVwcyIgfSwgWwogICAgX3ZtLl9tKDApLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiaDYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9BbGdlYnJhIiB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImZvbnQtYXdlc29tZS1pY29uIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIlB5dGhvbiAiKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgUHl0aG9uIGlzIGFuIGludGVycHJldGVkIGhpZ2gtbGV2ZWwgZ2VuZXJhbC1wdXJwb3NlIHByb2dyYW1taW5nIGxhbmd1YWdlLiBQeXRob24ncyBkZXNpZ24gcGhpbG9zb3BoeSBlbXBoYXNpemVzIGNvZGUgcmVhZGFiaWxpdHkgd2l0aCBpdHMgbm90YWJsZSB1c2Ugb2Ygc2lnbmlmaWNhbnQgaW5kZW50YXRpb24uICIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQiIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC01IG1iLTQiIH0sIFsKICAgICAgICBfYygiaDYiLCB7IHN0YXRpY0NsYXNzOiAibWItMyIgfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly9hdXRoMC5jb20vZG9jcy9tdWx0aWZhY3Rvci1hdXRoZW50aWNhdGlvbiIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogImxpbmsiIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfdm0uX3YoIkphdmEgIikKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiSmF2YSBpcyBhIHNldCBvZiBjb21wdXRlciBzb2Z0d2FyZSBhbmQgc3BlY2lmaWNhdGlvbnMgZGV2ZWxvcGVkIGJ5IEphbWVzIEdvc2xpbmcgYXQgU3VuIE1pY3Jvc3lzdGVtcywgd2hpY2ggd2FzIGxhdGVyIGFjcXVpcmVkIGJ5IHRoZSBPcmFjbGUgQ29ycG9yYXRpb24sIHRoYXQgcHJvdmlkZXMgYSBzeXN0ZW0gZm9yIGRldmVsb3BpbmcgYXBwbGljYXRpb24gc29mdHdhcmUgYW5kIGRlcGxveWluZyBpdCBpbiBhIGNyb3NzLXBsYXRmb3JtIGNvbXB1dGluZyBlbnZpcm9ubWVudC4iCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoImg2IiwgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogIi9Db3Vyc2VzIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogImxpbmsiIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfdm0uX3YoIkphdmFTY3JpcHQgIikKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiSmF2YVNjcmlwdCwgb2Z0ZW4gYWJicmV2aWF0ZWQgYXMgSlMsIGlzIGEgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgdGhhdCBjb25mb3JtcyB0byB0aGUgRUNNQVNjcmlwdCBzcGVjaWZpY2F0aW9uLiBKYXZhU2NyaXB0IGlzIGhpZ2gtbGV2ZWwsIG9mdGVuIGp1c3QtaW4tdGltZSBjb21waWxlZCwgYW5kIG11bHRpLXBhcmFkaWdtLiBJdCBoYXMgY3VybHktYnJhY2tldCBzeW50YXgsIGR5bmFtaWMgdHlwaW5nLCBwcm90b3R5cGUtYmFzZWQgb2JqZWN0LW9yaWVudGF0aW9uLCBhbmQgZmlyc3QtY2xhc3MgZnVuY3Rpb25zLiAiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kIiB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoImg2IiwgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogImh0dHBzOi8vYXV0aDAuY29tL2RvY3MvcnVsZXMiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF92bS5fdigiQysrICIpCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfYygicCIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgJyBDKysgaXMgYSBnZW5lcmFsLXB1cnBvc2UgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgY3JlYXRlZCBieSBCamFybmUgU3Ryb3VzdHJ1cCBhcyBhbiBleHRlbnNpb24gb2YgdGhlIEMgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UsIG9yICJDIHdpdGggQ2xhc3NlcycKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQogICAgXSksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC01IG1iLTQiIH0sIFsKICAgICAgICBfYygiaDYiLCB7IHN0YXRpY0NsYXNzOiAibWItMyIgfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgeyBhdHRyczogeyBocmVmOiAiL0NvdXJzZXMiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF92bS5fdigiQyAiKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICIgQyBpcyBhIGdlbmVyYWwtcHVycG9zZSwgcHJvY2VkdXJhbCBjb21wdXRlciBwcm9ncmFtbWluZyBsYW5ndWFnZSBzdXBwb3J0aW5nIHN0cnVjdHVyZWQgcHJvZ3JhbW1pbmcsIGxleGljYWwgdmFyaWFibGUgc2NvcGUsIGFuZCByZWN1cnNpb24sIHdpdGggYSBzdGF0aWMgdHlwZSBzeXN0ZW0uIEJ5IGRlc2lnbiwgQyBwcm92aWRlcyBjb25zdHJ1Y3RzIHRoYXQgbWFwIGVmZmljaWVudGx5IHRvIHR5cGljYWwgbWFjaGluZSBpbnN0cnVjdGlvbnMgIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZCIgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTUgbWItNCIgfSwgWwogICAgICAgIF9jKCJoNiIsIHsgc3RhdGljQ2xhc3M6ICJtYi0zIiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7IGF0dHJzOiB7IGhyZWY6ICJodHRwczovL2F1dGgwLmNvbS9kb2NzL3J1bGVzIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogImxpbmsiIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfdm0uX3YoIlN3aWZ0ICIpCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfYygicCIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiBTd2lmdCBpcyBhIGdlbmVyYWwtcHVycG9zZSwgbXVsdGktcGFyYWRpZ20sIGNvbXBpbGVkIHByb2dyYW1taW5nIGxhbmd1YWdlIGRldmVsb3BlZCBieSBBcHBsZSBJbmMuIGFuZCB0aGUgb3Blbi1zb3VyY2UgY29tbXVuaXR5LCBmaXJzdCByZWxlYXNlZCBpbiAyMDE0LiIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC00IiB9LCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWItNCBhcHAtbG9nbyIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgImh0dHBzOi8vaTIud3AuY29tL2FsbGh0YWNjZXNzLmluZm8vd3AtY29udGVudC91cGxvYWRzLzIwMTgvMDMvcHJvZ3JhbW1pbmcuZ2lmP2ZpdD0xMjgxJTJDNzE2JnNzbD0xIiwKICAgICAgICAgICAgYWx0OiAiQnJvb2tkYWxlIGxvZ28iLAogICAgICAgICAgICB3aWR0aDogIjI3MCIsCiAgICAgICAgICAgIGhlaWdodDogIjE2MCIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtNCIgfSwgWwogICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIkxlYXJuIEEgUHJncmFtbWluZyBsYW5ndWFnZSAuLi4uLiIpXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTQiIH0sIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYi00IGFwcC1sb2dvIiwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogImh0dHBzOi8vaGFja2Vybm9vbi5jb20vaW1hZ2VzL2YycHgzNmZ5LmdpZiIsCiAgICAgICAgICAgIGFsdDogIkJyb29rZGFsZSBsb2dvIiwKICAgICAgICAgICAgd2lkdGg6ICIyNzAiLAogICAgICAgICAgICBoZWlnaHQ6ICIxNjAiCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}