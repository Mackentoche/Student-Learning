{"remainingRequest":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitHub\\StudentLearning\\01-login\\src\\views\\Extra\\PC.vue?vue&type=template&id=5ef0058c&","dependencies":[{"path":"C:\\GitHub\\StudentLearning\\01-login\\src\\views\\Extra\\PC.vue","mtime":1620230704745},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibmV4dC1zdGVwcyIgfSwgWwogICAgX3ZtLl9tKDApLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiaDYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgdG86CiAgICAgICAgICAgICAgICAgICAgImh0dHBzOi8vdGVjaGd1aWRlZC5jb20vMTQtcmVhc29ucy13aHkteW91LXNob3VsZC1idWlsZC1hLXBjLyIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci0yIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogImxpbmsiIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX3ZtLl92KCJXaHkgQnVpbGQgYSBwYz8gIikKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoInZpZGVvLWVtYmVkIiwgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBjc3M6ICJlbWJlZC1yZXNwb25zaXZlLTIxYnk5IiwKICAgICAgICAgICAgICAgIHNyYzogImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9c0xXWHZOYkpNcHciCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZCIgfSksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJoNiIsIHsgc3RhdGljQ2xhc3M6ICJtYi0zIiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICBocmVmOiAiaHR0cHM6Ly93d3cudGVjaHJhZGFyLmNvbS9ob3ctdG8vaG93LXRvLWJ1aWxkLWEtcGMiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMiIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICJsaW5rIiB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF92bS5fdigiSG93IHRvIGJ1aWxkIGEgUEMgIikKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDEKICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygidmlkZW8tZW1iZWQiLCB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgY3NzOiAiZW1iZWQtcmVzcG9uc2l2ZS0yMWJ5OSIsCiAgICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1VU2w2cXlZeXJQVSIKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTUgbWItNCIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygiaDYiLCB7IHN0YXRpY0NsYXNzOiAibWItMyIgfSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgeyBhdHRyczogeyBocmVmOiAiL2h0dHBzOi8vcGNwYXJ0cGlja2VyLmNvbS8iIH0gfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMiIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICJsaW5rIiB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF92bS5fdigiSG93IHRvIENvcnJlY3RseSBjaG9vc2UgeW91ciBQYXJ0cyAiKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJ2aWRlby1lbWJlZCIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBjc3M6ICJlbWJlZC1yZXNwb25zaXZlLTIxYnk5IiwKICAgICAgICAgICAgICBzcmM6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PWpfRGNXZ3hNWjNrIgogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZCIgfSksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJoNiIsIHsgc3RhdGljQ2xhc3M6ICJtYi0zIiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhyZWY6ICJodHRwczovL2F1dGgwLmNvbS9kb2NzL3J1bGVzIiB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImZvbnQtYXdlc29tZS1pY29uIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIkJlZ2lubmVyIE1pc3Rha2VzICIpCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoInZpZGVvLWVtYmVkIiwgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGNzczogImVtYmVkLXJlc3BvbnNpdmUtMjFieTkiLAogICAgICAgICAgICAgIHNyYzogImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9LThMTU1MX0VpTWciCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICkKICAgIF0pLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbC1tZC01IG1iLTQiIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImg2IiwgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImEiLAogICAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogIi9Db3Vyc2VzIiB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImZvbnQtYXdlc29tZS1pY29uIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIlNhdmluZyBNb25leSAiKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJ2aWRlby1lbWJlZCIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBjc3M6ICJlbWJlZC1yZXNwb25zaXZlLTIxYnk5IiwKICAgICAgICAgICAgICBzcmM6ICJodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVVkc2FUUkJaZVB3IgogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZCIgfSksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJoNiIsIHsgc3RhdGljQ2xhc3M6ICJtYi0zIiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhyZWY6ICJodHRwczovL2F1dGgwLmNvbS9kb2NzL3J1bGVzIiB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImZvbnQtYXdlc29tZS1pY29uIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIkdhbWluZyBSZWFkeSAiKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgICBfdm0uX3YoIiBMZWFybiBob3cgdG8gY2hvb3NlIHBhcnQgZm9yIHlvdXIgbmV4dCBnYW1pbmcgcHJvamVjdC4iKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygidmlkZW8tZW1iZWQiLCB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgY3NzOiAiZW1iZWQtcmVzcG9uc2l2ZS0yMWJ5OSIsCiAgICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0yam9BX1M5MnA2NCIKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC00IiB9LCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWItNCBhcHAtbG9nbyIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgImh0dHBzOi8vc3RlYW1jZG4tYS5ha2FtYWloZC5uZXQvc3RlYW1jb21tdW5pdHkvcHVibGljL2ltYWdlcy9jbGFucy8yOTg0OTQ2OS8zZTcyYTFiNTcxMzVkMGY0YTViYTU3YjAxODRjYTk4YTI1Zjc2NDgxLmdpZiIsCiAgICAgICAgICAgIGFsdDogIkJyb29rZGFsZSBsb2dvIiwKICAgICAgICAgICAgd2lkdGg6ICIyNzAiLAogICAgICAgICAgICBoZWlnaHQ6ICIxNjAiCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLTQiIH0sIFsKICAgICAgICBfYygiaDIiLCBbX3ZtLl92KCJTdGFydCBZb3VyIEJ1aWxkIFRvZGF5IildKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtNCIgfSwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogIm1iLTQgYXBwLWxvZ28iLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOgogICAgICAgICAgICAgICJodHRwczovL3d3dy50ZWNoc3BvdC5jb20vYXJ0aWNsZXMtaW5mby85ODIvaW1hZ2VzLzIwMTUtMDMtMjlfMTEtMzYtNDUuZ2lmIiwKICAgICAgICAgICAgYWx0OiAiQnJvb2tkYWxlIGxvZ28iLAogICAgICAgICAgICB3aWR0aDogIjI3MCIsCiAgICAgICAgICAgIGhlaWdodDogIjE2MCIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}