{"remainingRequest":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\GitHub\\StudentLearning\\01-login\\src\\views\\Extra\\Politics.vue?vue&type=template&id=2cb1ef5a&","dependencies":[{"path":"C:\\GitHub\\StudentLearning\\01-login\\src\\views\\Extra\\Politics.vue","mtime":1620231895286},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\GitHub\\StudentLearning\\01-login\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibmV4dC1zdGVwcyIgfSwgWwogICAgX3ZtLl9tKDApLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiaDYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9BbGdlYnJhIiB9IH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImZvbnQtYXdlc29tZS1pY29uIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIk1vZGVybiBQb2xpdGljcyAiKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJQb2xpdGljcyBpcyBleGVyY2lzZWQgb24gYSB3aWRlIHJhbmdlIG9mIHNvY2lhbCBsZXZlbHMsIGZyb20gY2xhbnMgYW5kIHRyaWJlcyBvZiB0cmFkaXRpb25hbCBzb2NpZXRpZXMsIHRocm91Z2ggbW9kZXJuIGxvY2FsIGdvdmVybm1lbnRzLCBjb21wYW5pZXMgYW5kIGluc3RpdHV0aW9ucyB1cCB0byBzb3ZlcmVpZ24gc3RhdGVzLCB0byB0aGUgaW50ZXJuYXRpb25hbCBsZXZlbC4gSW4gbW9kZXJuIG5hdGlvbiBzdGF0ZXMsIHBlb3BsZSBvZnRlbiBmb3JtIHBvbGl0aWNhbCBwYXJ0aWVzIHRvIHJlcHJlc2VudCB0aGVpciBpZGVhcy4iCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kIiB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoImg2IiwgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vYXV0aDAuY29tL2RvY3MvbXVsdGlmYWN0b3ItYXV0aGVudGljYXRpb24iCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImZvbnQtYXdlc29tZS1pY29uIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci0yIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICJsaW5rIiB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX3ZtLl92KCJXb3JsZCBQb2xpdGljcyAiKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJUaGUgZ2xvYmFsIHBvbGl0aWNzIGNvdXJzZSBleHBsb3JlcyBmdW5kYW1lbnRhbCBwb2xpdGljYWwgY29uY2VwdHMgc3VjaCBhcyBwb3dlciwgZXF1YWxpdHksIHN1c3RhaW5hYmlsaXR5LCBhbmQgcGVhY2UgaW4gYSByYW5nZSBvZiBjb250ZXh0cyBhbmQgYXQgYSB2YXJpZXR5IG9mIGxldmVscy4uIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKSwKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJoNiIsIHsgc3RhdGljQ2xhc3M6ICJtYi0zIiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhyZWY6ICIvQ291cnNlcyIgfSB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci0yIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogImxpbmsiIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX3ZtLl92KCJUaGUgUGFydHkgU3lzdGVtICIpCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoInZpZGVvLWVtYmVkIiwgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIGNzczogImVtYmVkLXJlc3BvbnNpdmUtMjFieTkiLAogICAgICAgICAgICAgIHNyYzogImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9UGtsdEFsX2NPNVkiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kIiB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoImg2IiwgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjoKICAgICAgICAgICAgICAgICAgImh0dHBzOi8vdG93YXJkc2RhdGFzY2llbmNlLmNvbS9ob3ctc3RhdGlzdGljYWxseS1iaWFzZWQtaXMtb3VyLW5ld3MtZjI4ZjBmYWIzY2IzIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF92bS5fdigiQmVzdCBOZXdzIFNvdXJjZXMgIikKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0pLAogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiTGVhcm4gYWJvdXQgdGhlIGJlc3Qgc291cmNlcyB0byBnZXQgeW91ciBpbmZvcm1hdGlvbiBhbmQgc3RheSBpbmZvcm1lZCAiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoImg2IiwgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogIi9Db3Vyc2VzIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTIiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogImxpbmsiIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfdm0uX3YoIkRpZmZlcmVudCBMZWFkZXJzaGlwcyAiKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICJUaGUgYnJhbmNoIG9mIG1hdGhlbWF0aWNzIGNvbmNlcm5lZCB3aXRoIHRoZSBwcm9wZXJ0aWVzIGFuZCByZWxhdGlvbnMgb2YgcG9pbnRzLCBsaW5lcywgc3VyZmFjZXMsIHNvbGlkcywgYW5kIGhpZ2hlciBkaW1lbnNpb25hbCBhbmFsb2dzLiAiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kIiB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNSBtYi00IiB9LCBbCiAgICAgICAgX2MoImg2IiwgeyBzdGF0aWNDbGFzczogIm1iLTMiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYSIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgaHJlZjogImh0dHBzOi8vYXV0aDAuY29tL2RvY3MvcnVsZXMiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAibGluayIgfQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF92bS5fdigiTW9zdCBpbXBhY3RmdWwgTGVhZGVycyAiKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoInAiLCBbCiAgICAgICAgICBfdm0uX3YoIkxlYXJuIGFib3V0IHRoZSBtb3N0IGltcGFjdGZ1bCBMZWFkZXIgaW4gTW9kZXJuIEhpc3RvcnkgIikKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC00IiB9LCBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWItNCBhcHAtbG9nbyIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6ICJodHRwczovL21lZGlhMy5naXBoeS5jb20vbWVkaWEvbDJKaEpUT25MazFhWDRnRzQvZ2lwaHkuZ2lmIiwKICAgICAgICAgICAgYWx0OiAiQnJvb2tkYWxlIGxvZ28iLAogICAgICAgICAgICB3aWR0aDogIjI3MCIsCiAgICAgICAgICAgIGhlaWdodDogIjE2MCIKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtNCIgfSwgWwogICAgICAgIF9jKCJoMiIsIFtfdm0uX3YoIkdvb2Qgb2wgUG9saXRpY3MuLi4uIildKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtNCIgfSwgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogIm1iLTQgYXBwLWxvZ28iLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOgogICAgICAgICAgICAgICJodHRwczovL3Mud3NqLm5ldC9wdWJsaWMvcmVzb3VyY2VzL2ltYWdlcy9CTi1RUTE0Ml8yMDE2MTFfTV8yMDE2MTEwNDEwNTIyNi5naWYiLAogICAgICAgICAgICBhbHQ6ICJCcm9va2RhbGUgbG9nbyIsCiAgICAgICAgICAgIHdpZHRoOiAiMjcwIiwKICAgICAgICAgICAgaGVpZ2h0OiAiMTYwIgogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}